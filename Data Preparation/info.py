import sqlite3
import random
import re
import base64
import matplotlib.pyplot as plt
import matplotlib.image as mping


职务={'Chairman':0,'General Manager':1,'Supervisor':2,'Cashier':2,'Administration':3,'HR':3,'Store clerk':4,'Supervisor':4,'Franchisee':4,'Technician':5,'Quality inspector':5,'Storer':6,'Logistician':6,'Buyer':6}
部门={'Chairman':[0,-1],'Management':[1,0],'Accounting':[2,1],'Admin and HR':[3,1],'Operational':[4,1],'Product':[5,1],'Logistics':[6,1]}
职称={'Senior','Sub-Senior','Intermediate','Assistant',' Technical'}

职务专属码={'Chairman':'001','General Manager':'002','Supervisor':'003','Cashier':'004','Administration':'005','HR':'006','Store clerk':'007','Supervisor':'008','Franchisee':'009','Technician':'010','Quality inspector':'011','Storer':'012','Logistician':'013','Buyer':'014'}
部门专属码={'Chairman':'001','Management':'002','Accounting':'003','Admin and HR':'004','Operational':'005','Product':'006','Logistics':'007'}
picsm=[]
picsw=[]

def main():
    date='2020/06/23'
    date=date.encode('utf-8')
    con=sqlite3.connect("data.db")#charset='base64',use_unicode=True
    cur=con.cursor()
    #加入部门信息
    cur.execute("CREATE TABLE `Depart`(`ID` TEXT,`CD` TEXT,`Name` TEXT,`SettingTime` TEXT,`Intro` TEXT)")
    for item in 部门:
    	cur.execute("INSERT INTO `Depart` values(?,?,?,?,?)",(get_zhuguan(item),部门专属码[item],item,date,item+' Introduction.  '))
    #加入员工信息 和 员工照片
    cur.execute("CREATE TABLE `Staff`(`StaffID` TEXT,`CD` TEXT,`Name` TEXT,`Gender` TEXT,`ID` TEXT,`Duty` TEXT,`Rank` TEXT,`Speciality` TEXT,`Pic` LONGBLOB,`Date` TEXT)")

    Name,gender=getName()
    cur.execute("INSERT INTO Staff values(?,?,?,?,?,?,?,?,?,?)",('001','001001001',Name,gender,HKID(),'chairman','Senior','N/A',getpic(gender),date))
    state=False
    for item1 in 职务:
        if state==False:
            state=True
        else:
            i=1
            for item2 in 职称:
                Name,gender=getName()
                cur.execute("INSERT INTO staff values(?,?,?,?,?,?,?,?,?,?)",(get_bumen(item1),get_bumen(item1)+职务专属码[item1]+'00'+str(i),Name,gender,HKID(),item1,item2,get_techang(),getpic(gender),date))

                i+=1


    
    '''
    cur.execute("INSERT INTO 员工照片 values(?,?,?)",('001001001','000','20200623'))
    state=False
    for item1 in 职务:
        if state==False:
            state=True
        else:
            i=1
            for item2 in 职称:
                cur.execute("INSERT INTO 员工照片 values(?,?,?)",(get_bumen(item1)+职务专属码[item1]+'00'+str(i),getpic(),'20200623'))
                i+=1
    '''
    #提交
    con.commit()
    

    
    #展示储存状况
    cur.execute("SELECT * FROM `Depart`")
    for i in cur.fetchall():
        print(list(i))
    print()

    cur.execute("SELECT `StaffID`,`CD`,`Name`,`Gender`,`ID`,`Duty`,`Rank`,`Speciality`,`Date` FROM `Staff`")
    for i in cur.fetchall():
        print(i)
    print()



  
    '''cur.execute("SELECT * FROM 员工照片")
    for i in cur.fetchall():
        print(i[0],i[2])

        
        img=base64.b64decode(i[1])
        image = mping.imread(img)
        mpimg.imsave("\\图片\\test\\{}.jpg".format(i[0]), image)
       
        file=open('\\图片\\test','wb')
        file.write(img)
        img.save
        file.close
    '''

    #关闭
    cur.close()
    con.close()

    print(sorted(picsm))
    print(sorted(picsw))




def get_zhuguan(item):
    global 部门,部门专属码
    code=部门[item][1]
    for i in 部门:
        if 部门[i][0]==code:
            return 部门专属码[i]

def getName():
    first_man = ['Michael','Joshua','Madison','Andrew','Ashley', 'Joseph','Nicholas','Anthony','Tyler', 'Alexis', 'Daniel','Christopher', 'Alexander','John', 'William','Brandon','Dylan','Zachary','Ethan','Ryan','Justin','David', 'Rachel', 'Benjamin', 'Austin', 'Destiny','Cameron','James',  'Jonathan','Logan','Nathan', 'Samuel', 'Morgan', 'Hunter','Robert','Jose', 'Sydney', 'Thomas','Kyle','Kevin','Gabriel',  'Jason', 'Luis','Haley', 'Aaron' ]
    first_woman = ['Emily','Hannah','Matthew', 'Samantha','Sarah', 'Elizabeth','Kayla','Abigail','Jessica','Taylor','Anna',  'Lauren',  'Megan', 'Brianna',  'Olivia',  'Victoria',  'Emma',  'Grace',  'Jasmine',  'Nicole',  'Alyssa', 'Chloe', 'Julia',  'Jennifer',  'Kaitlyn',  'Isabella',  'Natalie',  'Alexandra', 'Katherine',  'Amanda',  'Stephanie',  'Hailey', 'Elijah', 'Maria', 'Gabrielle','Rebecca']
    secondname = ['Corbyn', 'Smith', 'Jones', 'Williams', 'Brown', 'Davies', 'Wilson', 'Evans', 'Thomas', 'Johnson', 'Roberts', 'Walker', 'Wright', 'Thompson', 'Robinson', 'White', 'Hughes', 'Edwards', 'Hall', 'Green', 'Martin', 'Wood', 'Lewis', 'Harris', 'Clarke', 'Jackson', 'Clark', 'Turner', 'Scott', 'Hill', 'Moore', 'Cooper', 'Ward', 'Morris', 'King', 'Watson', 'Harrison', 'Morgan', 'Baker', 'Young', 'Patel', 'Allen', 'Anderson', 'Mitchell', 'Phillips', 'James', 'Campbell', 'Bell', 'Lee', 'Kelly', 'Parker', 'Davis', 'Bennett', 'Miller', 'Price', 'Shaw', 'Cook', 'Simpson', 'Griffiths', 'Richardson', 'Stewart', 'Marshall', 'Collins', 'Carter', 'Bailey', 'Murphy', 'Gray', 'Murray', 'Cox', 'Adams', 'Richards', 'Graham', 'Ellis', 'Wilkinson', 'Foster', 'Robertson', 'Chapman', 'Russell', 'Mason', 'Webb', 'Powell', 'Rogers', 'Gibson', 'Hunt', 'Holmes']
  
    '''first_Name=['李', '王', '张', '刘', '陈', '杨', '赵', '黄', '周', '吴', '徐', '孙', '胡', '朱', '高', '林', '何', '郭', '马', '罗', '梁', '宋', '郑', '谢', '韩', '唐', '冯', '于', '董', '萧', '程', '曹', '袁', '邓', '许', '傅', '沈', '曾', '彭', '吕', '苏', '卢', '蒋', '蔡', '贾', '丁', '魏', '薛', '叶', '阎', '余', '潘', '杜', '戴', '夏', '钟', '汪', '田', '任', '姜', '范', '方', '石', '姚', '谭', '廖', '邹', '熊', '金', '陆', '郝', '孔', '白', '崔', '康', '毛', '邱', '秦', '江', '史', '顾', '侯', '邵', '孟', '龙', '万', '段', '漕', '钱', '汤', '尹', '黎', '易', '常', '武', '乔', '贺', '赖', '龚', '文']
    Second_man=['子赫', '祺祾', '朝彦', '圣鹏', '新哲', '鼎明', '楠明', '裕昊', '智棋', '皓福', '敬坤', '渊荣', '景尧', '敬洪', '朝实', '善玮', '朝棋', '朝寒', '楷林', '景瑞', '琪洋', '捷杰', '寒柏', '敬易', '涛光', '鼎益', '朝波', '新明', '昌震', '皓翔', '乔豪', '敬轩', '尚兴', '皓清', '裕明', '杰宇', '岩乐', '乔宁', '乔诚', '川善', '东辉', '皓宁', '雄杰', '金锋', '涛宇', '楠峻', '靖轩', '尚欧', '琪哲', '皓景', '昊辉', '雨锋', '智凯', '捷旭', '雨逸', '宜磊', '川峰', '智睿', '尚啸', '铭晨', '莱远', '宝峰', '涆安', '腾波', '星儒', '玥隆', '日麒', '震可', '远皓', '宇正', '铭振', '蓄景', '曜为', '昂康', '豪嘉', '晟良', '逸凌', '珹耀', '轩越', '燎段', '炎殿', '淼瀚', '昌烨', '黎伟', '昱名', '彭奎', '爵立', '嘉珂']
    Second_woman=['乐媛', '馥昀', '冉瑶', '贞苓', '悦姿', '璐瑶', '燕乐', '玮昀', '冉云', '贞芝', '悦瑶', '璐莉', '乐尘', '昀卿', '清冉', '雅贞', '圣悦', '丹璐', '乐鹂', '昀妍', '静冉', '晗贞', '婧悦', '瑾璐', '舒乐', '珍昀', '冉雅', '贞瑾', '悦曼', '璐婷', '佳乐', '筱昀', '冉瑾', '贞媚', '悦蓉', '瑶璐', '乐蓓', '昀伶', '静冉', '淑贞', '以悦', '梦璐', '乐萌', '昀妍', '冉冰', '贞丽', '以悦', '璐哲', '芝筱', '晗芝', '芝思', '卓芝', '芝铃', '莎佩', '莎兰', '淑莎', '丹莎', '莎钰', '芳谣', '婕芳', '芳盈', '泽芳', '芳晴', '兰雅', '杉兰', '兰筱', '怡兰', '兰梦', '雅清', '雅晴', '云雅', '慧雅', '慧雅', '芸芝', '姗芸', '瑜芸', '芸铭', '嘉芸', '瑗泓', '瑗曼', '瑗婉', '灵瑗', '萱瑗', '芬嘉', '惠芬', '芬晔', '梓芬', '芬瑶']'''
    index1=random.randint(0,35)
    index2=random.randint(0,84)
    sex=['Man','Woman']
    gender=sex[random.randint(0,1)]
    if gender=='Man':
        Name=first_man[index1]+', '+secondname[index2]
    else:
        Name=first_woman[index1]+', '+secondname[index2]
    if len(Name) > 19: return getName()
    return Name,gender

def HKID():
    heads = ['A', 'C', 'L', 'N', 'O', 'R', 'U', 'W', 'X', 'Z']
    head = heads[random.randint(0,len(heads)-1)]
    nums = head
    counter = 7
    sum = (ord(head)-64)*8
    for i in range(6):
        cur = random.randint(0,9)
        nums += str(cur)
        sum += counter*cur
        counter -= 1
    nums += '('
    nums += str(sum%11) if sum%11!=10 else 'A'
    nums += ')'
    return nums

def get_id(gender):
    quhao=['110100', '110101', '110102', '110103', '110104', '110105', '110106', '110107', '110108', '110109', '110111', '110112', '110113', '110114', '110115', '110116', '110117', '110200', '110228', '110229', '120100', '120101', '120102', '120103', '120104', '120105', '120106', '120107', '120108', '120109', '120110', '120111', '120112', '120113', '120114', '120115', '120200', '120221', '120223', '120225', '130100', '130101', '130102', '130103', '130104', '130105', '130107', '130108', '130121', '130123', '130124', '130125', '130126', '130127', '130128', '130129', '130130', '130131', '130132', '130133', '130181', '130182', '130183', '130184', '130185', '130200', '130201', '130202', '130203', '130204', '130205', '130207', '130208', '130223', '130224', '130225', '130227', '130229', '130230', '130281', '130283', '130300', '130301', '130302', '130303', '130304', '130321', '130322', '130323', '130324', '130400', '130401', '130402', '130403', '130404', '130406', '130421', '130423', '130424', '130425', '130426', '130427', '130428', '130429', '130430', '130431', '130432', '130433', '130434', '130435', '130481', '130500', '130501', '130502', '130503', '130521', '130522', '130523', '130524', '130525', '130526', '130527', '130528', '130529', '130530', '130531', '130532', '130533', '130534', '130535', '130581', '130582', '130600', '130601', '130602', '130603', '130604', '130621', '130622', '130623', '130624', '130625', '130626', '130627', '130628', '130629', '130630', '130631', '130632', '130634', '130635', '130636', '130637', '130638', '130681', '130682', '130683', '130684', '130700', '130701', '130702', '130703', '130705', '130706', '130721', '130722', '130723', '130724', '130725', '130726', '130727', '130728', '130729', '130730', '130731', '130732', '130733', '130800', '130801', '130802', '130803', '130804', '130821', '130822', '130823', '130824', '130825', '130826', '130827', '130828', '130900', '130901', '130902', '130903', '130921', '130922', '130923', '130924', '130925', '130926', '130927', '130928', '130929', '130930', '130981', '130982', '130983', '130984', '131000', '131001', '131002', '131003', '131022', '131023', '131024', '131025', '131026', '131028', '131081', '131082', '131100', '131101', '131102', '131121', '131122', '131123', '131124', '131125', '131126', '131127', '131128', '131181', '131182', '140100', '140101', '140105', '140106', '140107', '140108', '140109', '140110', '140121', '140122', '140123', '140181', '140200', '140201', '140202', '140203', '140211', '140212', '140221', '140222', '140223', '140224', '140225', '140226', '140227', '140300', '140301', '140302', '140303', '140311', '140321', '140322', '140400', '140401', '140402', '140411', '140421', '140423', '140424', '140425', '140426', '140427', '140428', '140429', '140430', '140431', '140481', '140500', '140501', '140502', '140521', '140522', '140524', '140525', '140581', '140600', '140601', '140602', '140603', '140621', '140622', '140623', '140624', '140700', '140701', '140702', '140721', '140722', '140723', '140724', '140725', '140726', '140727', '140728', '140729', '140781', '140800', '140801', '140802', '140821', '140822', '140823', '140824', '140825', '140826', '140827', '140828', '140829', '140830', '140881', '140882', '140900', '140901', '140902', '140921', '140922', '140923', '140924', '140925', '140926', '140927', '140928', '140929', '140930', '140931', '140932', '140981', '141000', '141001', '141002', '141021', '141022', '141023', '141024', '141025', '141026', '141027', '141028', '141029', '141030', '141031', '141032', '141033', '141034', '141081', '141082', '141100', '141101', '141102', '141121', '141122', '141123', '141124', '141125', '141126', '141127', '141128', '141129', '141130', '141181', '141182', '150100', '150101', '150102', '150103', '150104', '150105', '150121', '150122', '150123', '150124', '150125', '150200', '150201', '150202', '150203', '150204', '150205', '150206', '150207', '150221', '150222', '150223', '150300', '150301', '150302', '150303', '150304', '150400', '150401', '150402', '150403', '150404', '150421', '150422', '150423', '150424', '150425', '150426', '150428', '150429', '150430', '150500', '150501', '150502', '150521', '150522', '150523', '150524', '150525', '150526', '150581', '150600', '150602', '150621', '150622', '150623', '150624', '150625', '150626', '150627', '150700', '150701', '150702', '150721', '150722', '150723', '150724', '150725', '150726', '150727', '150781', '150782', '150783', '150784', '150785', '150800', '150801', '150802', '150821', '150822', '150823', '150824', '150825', '150826', '150900', '150901', '150902', '150921', '150922', '150923', '150924', '150925', '150926', '150927', '150928', '150929', '150981', '152200', '152201', '152202', '152221', '152222', '152223', '152224', '152500', '152501', '152502', '152522', '152523', '152524', '152525', '152526', '152527', '152528', '152529', '152530', '152531', '152600', '152900', '152921', '152922', '152923', '210100', '210101', '210102', '210103', '210104', '210105', '210106', '210111', '210112', '210113', '210114', '210122', '210123', '210124', '210181', '210200', '210201', '210202', '210203', '210204', '210211', '210212', '210213', '210224', '210281', '210282', '210283', '210300', '210301', '210302', '210303', '210304', '210311', '210321', '210323', '210381', '210400', '210401', '210402', '210403', '210404', '210411', '210421', '210422', '210423', '210500', '210501', '210502', '210503', '210504', '210505', '210521', '210522', '210600', '210601', '210602', '210603', '210604', '210624', '210681', '210682', '210700', '210701', '210702', '210703', '210711', '210726', '210727', '210781', '210782', '210800', '210801', '210802', '210803', '210804', '210811', '210881', '210882', '210900', '210901', '210902', '210903', '210904', '210905', '210911', '210921', '210922', '211000', '211001', '211002', '211003', '211004', '211005', '211011', '211021', '211081', '211100', '211101', '211102', '211103', '211121', '211122', '211200', '211201', '211202', '211204', '211221', '211223', '211224', '211281', '211282', '211300', '211301', '211302', '211303', '211321', '211322', '211324', '211381', '211382', '211400', '211401', '211402', '211403', '211404', '211421', '211422', '211481', '220100', '220101', '220102', '220103', '220104', '220105', '220106', '220112', '220122', '220181', '220182', '220183', '220200', '220201', '220202', '220203', '220204', '220211', '220221', '220281', '220282', '220283', '220284', '220300', '220301', '220302', '220303', '220322', '220323', '220381', '220382', '220400', '220401', '220402', '220403', '220421', '220422', '220500', '220501', '220502', '220503', '220521', '220523', '220524', '220581', '220582', '220600', '220601', '220602', '220621', '220622', '220623', '220625', '220681', '220700', '220701', '220702', '220721', '220722', '220723', '220724', '220800', '220801', '220802', '220821', '220822', '220881', '220882', '222400', '222401', '222402', '222403', '222404', '222405', '222406', '222424', '222426', '230100', '230101', '230102', '230103', '230104', '230105', '230106', '230107', '230108', '230121', '230123', '230124', '230125', '230126', '230127', '230128', '230129', '230181', '230182', '230183', '230184', '230200', '230201', '230202', '230203', '230204', '230205', '230206', '230207', '230208', '230221', '230223', '230224', '230225', '230227', '230229', '230230', '230231', '230281', '230300', '230301', '230302', '230303', '230304', '230305', '230306', '230307', '230321', '230381', '230382', '230400', '230401', '230402', '230403', '230404', '230405', '230406', '230407', '230421', '230422', '230500', '230501', '230502', '230503', '230505', '230506', '230521', '230522', '230523', '230524', '230600', '230601', '230602', '230603', '230604', '230605', '230606', '230621', '230622', '230623', '230624', '230700', '230701', '230702', '230703', '230704', '230705', '230706', '230707', '230708', '230709', '230710', '230711', '230712', '230713', '230714', '230715', '230716', '230722', '230781', '230800', '230801', '230802', '230803', '230804', '230805', '230811', '230822', '230826', '230828', '230833', '230881', '230882', '230900', '230901', '230902', '230903', '230904', '230921', '231000', '231001', '231002', '231003', '231004', '231005', '231024', '231025', '231081', '231083', '231084', '231085', '231100', '231101', '231102', '231121', '231123', '231124', '231181', '231182', '231200', '231201', '231202', '231221', '231222', '231223', '231224', '231225', '231226', '231281', '231282', '231283', '232700', '232721', '232722', '232723', '310100', '310101', '310103', '310104', '310105', '310106', '310107', '310108', '310109', '310110', '310112', '310113', '310114', '310115', '310116', '310117', '310118', '310119', '310120', '310200', '310230', '320100', '320101', '320102', '320103', '320104', '320105', '320106', '320107', '320111', '320113', '320114', '320115', '320116', '320124', '320125', '320200', '320201', '320202', '320203', '320204', '320205', '320206', '320211', '320281', '320282', '320300', '320301', '320302', '320303', '320304', '320305', '320311', '320321', '320322', '320323', '320324', '320381', '320382', '320400', '320401', '320402', '320404', '320405', '320411', '320412', '320481', '320482', '320500', '320501', '320502', '320503', '320504', '320505', '320506', '320507', '320581', '320582', '320583', '320584', '320585', '320600', '320601', '320602', '320611', '320621', '320623', '320681', '320682', '320683', '320684', '320700', '320701', '320703', '320705', '320706', '320721', '320722', '320723', '320724', '320800', '320801', '320802', '320803', '320804', '320811', '320826', '320829', '320830', '320831', '320900', '320901', '320902', '320903', '320921', '320922', '320923', '320924', '320925', '320981', '320982', '321000', '321001', '321002', '321003', '321011', '321023', '321081', '321084', '321088', '321100', '321101', '321102', '321111', '321112', '321181', '321182', '321183', '321200', '321201', '321202', '321203', '321281', '321282', '321283', '321284', '321300', '321301', '321302', '321321', '321322', '321323', '321324', '330100', '330101', '330102', '330103', '330104', '330105', '330106', '330108', '330109', '330110', '330122', '330127', '330182', '330183', '330185', '330200', '330201', '330203', '330204', '330205', '330206', '330211', '330212', '330225', '330226', '330281', '330282', '330283', '330300', '330301', '330302', '330303', '330304', '330322', '330324', '330326', '330327', '330328', '330329', '330381', '330382', '330400', '330401', '330402', '330411', '330421', '330424', '330481', '330482', '330483', '330500', '330501', '330502', '330503', '330521', '330522', '330523', '330600', '330601', '330602', '330621', '330624', '330681', '330682', '330683', '330700', '330701', '330702', '330703', '330723', '330726', '330727', '330781', '330782', '330783', '330784', '330800', '330801', '330802', '330803', '330822', '330824', '330825', '330881', '330900', '330901', '330902', '330903', '330921', '330922', '331000', '331001', '331002', '331003', '331004', '331021', '331022', '331023', '331024', '331081', '331082', '331100', '331101', '331102', '331121', '331122', '331123', '331124', '331125', '331126', '331127', '331181', '340100', '340101', '340102', '340103', '340104', '340111', '340121', '340122', '340123', '340200', '340201', '340202', '340203', '340204', '340207', '340221', '340222', '340223', '340300', '340301', '340302', '340303', '340304', '340311', '340321', '340322', '340323', '340400', '340401', '340402', '340403', '340404', '340405', '340406', '340421', '340500', '340501', '340502', '340503', '340504', '340521', '340600', '340601', '340602', '340603', '340604', '340621', '340700', '340701', '340702', '340703', '340711', '340721', '340800', '340801', '340802', '340803', '340811', '340822', '340823', '340824', '340825', '340826', '340827', '340828', '340881', '341000', '341001', '341002', '341003', '341004', '341021', '341022', '341023', '341024', '341100', '341101', '341102', '341103', '341122', '341124', '341125', '341126', '341181', '341182', '341200', '341201', '341202', '341203', '341204', '341221', '341222', '341225', '341226', '341282', '341300', '341301', '341302', '341321', '341322', '341323', '341324', '341400', '341401', '341402', '341421', '341422', '341423', '341424', '341500', '341501', '341502', '341503', '341521', '341522', '341523', '341524', '341525', '341600', '341601', '341602', '341621', '341622', '341623', '341700', '341701', '341702', '341721', '341722', '341723', '341800', '341801', '341802', '341821', '341822', '341823', '341824', '341825', '341881', '350100', '350101', '350102', '350103', '350104', '350105', '350111', '350121', '350122', '350123', '350124', '350125', '350128', '350181', '350182', '350200', '350201', '350203', '350205', '350206', '350211', '350212', '350213', '350300', '350301', '350302', '350303', '350304', '350305', '350322', '350400', '350401', '350402', '350403', '350421', '350423', '350424', '350425', '350426', '350427', '350428', '350429', '350430', '350481', '350500', '350501', '350502', '350503', '350504', '350505', '350521', '350524', '350525', '350526', '350527', '350581', '350582', '350583', '350600', '350601', '350602', '350603', '350622', '350623', '350624', '350625', '350626', '350627', '350628', '350629', '350681', '350700', '350701', '350702', '350721', '350722', '350723', '350724', '350725', '350781', '350782', '350783', '350784', '350800', '350801', '350802', '350821', '350822', '350823', '350824', '350825', '350881', '350900', '350901', '350902', '350921', '350922', '350923', '350924', '350925', '350926', '350981', '350982', '360100', '360101', '360102', '360103', '360104', '360105', '360111', '360121', '360122', '360123', '360124', '360200', '360201', '360202', '360203', '360222', '360281', '360300', '360301', '360302', '360313', '360321', '360322', '360323', '360400', '360401', '360402', '360403', '360421', '360423', '360424', '360425', '360426', '360427', '360428', '360429', '360430', '360481', '360500', '360501', '360502', '360521', '360600', '360601', '360602', '360622', '360681', '360700', '360701', '360702', '360721', '360722', '360723', '360724', '360725', '360726', '360727', '360728', '360729', '360730', '360731', '360732', '360733', '360734', '360735', '360781', '360782', '360800', '360801', '360802', '360803', '360821', '360822', '360823', '360824', '360825', '360826', '360827', '360828', '360829', '360830', '360881', '360900', '360901', '360902', '360921', '360922', '360923', '360924', '360925', '360926', '360981', '360982', '360983', '361000', '361001', '361002', '361021', '361022', '361023', '361024', '361025', '361026', '361027', '361028', '361029', '361030', '361100', '361101', '361102', '361121', '361122', '361123', '361124', '361125', '361126', '361127', '361128', '361129', '361130', '361181', '370100', '370101', '370102', '370103', '370104', '370105', '370112', '370113', '370124', '370125', '370126', '370181', '370200', '370201', '370202', '370203', '370205', '370211', '370212', '370213', '370214', '370281', '370282', '370283', '370284', '370285', '370300', '370301', '370302', '370303', '370304', '370305', '370306', '370321', '370322', '370323', '370400', '370401', '370402', '370403', '370404', '370405', '370406', '370481', '370500', '370501', '370502', '370503', '370521', '370522', '370523', '370600', '370601', '370602', '370611', '370612', '370613', '370634', '370681', '370682', '370683', '370684', '370685', '370686', '370687', '370700', '370701', '370702', '370703', '370704', '370705', '370724', '370725', '370781', '370782', '370783', '370784', '370785', '370786', '370800', '370801', '370802', '370811', '370826', '370827', '370828', '370829', '370830', '370831', '370832', '370881', '370882', '370883', '370900', '370901', '370902', '370903', '370921', '370923', '370982', '370983', '371000', '371001', '371002', '371081', '371082', '371083', '371100', '371101', '371102', '371121', '371122', '371200', '371201', '371202', '371203', '371300', '371301', '371302', '371311', '371312', '371321', '371322', '371323', '371324', '371325', '371326', '371327', '371328', '371329', '371400', '371401', '371402', '371421', '371422', '371423', '371424', '371425', '371426', '371427', '371428', '371481', '371482', '371500', '371501', '371502', '371521', '371522', '371523', '371524', '371525', '371526', '371581', '371600', '371601', '371602', '371621', '371622', '371623', '371624', '371625', '371626', '371700', '371701', '371702', '371721', '371722', '371723', '371724', '371725', '371726', '371727', '371728', '410100', '410101', '410102', '410103', '410104', '410105', '410106', '410108', '410122', '410181', '410182', '410183', '410184', '410185', '410200', '410201', '410202', '410203', '410204', '410205', '410211', '410221', '410222', '410223', '410224', '410225', '410300', '410301', '410302', '410303', '410304', '410305', '410306', '410307', '410322', '410323', '410324', '410325', '410326', '410327', '410328', '410329', '410381', '410400', '410401', '410402', '410403', '410404', '410411', '410421', '410422', '410423', '410425', '410481', '410482', '410500', '410501', '410502', '410503', '410505', '410506', '410522', '410523', '410526', '410527', '410581', '410600', '410601', '410602', '410603', '410611', '410621', '410622', '410700', '410701', '410702', '410703', '410704', '410711', '410721', '410724', '410725', '410726', '410727', '410728', '410781', '410782', '410800', '410801', '410802', '410803', '410804', '410811', '410821', '410822', '410823', '410825', '410881', '410882', '410883', '410900', '410901', '410902', '410922', '410923', '410926', '410927', '410928', '411000', '411001', '411002', '411023', '411024', '411025', '411081', '411082', '411100', '411101', '411102', '411121', '411122', '411123', '411200', '411201', '411202', '411221', '411222', '411224', '411281', '411282', '411300', '411301', '411302', '411303', '411321', '411322', '411323', '411324', '411325', '411326', '411327', '411328', '411329', '411330', '411381', '411400', '411401', '411402', '411403', '411421', '411422', '411423', '411424', '411425', '411426', '411481', '411500', '411501', '411502', '411503', '411521', '411522', '411523', '411524', '411525', '411526', '411527', '411528', '411600', '411601', '411602', '411621', '411622', '411623', '411624', '411625', '411626', '411627', '411628', '411681', '411700', '411701', '411702', '411721', '411722', '411723', '411724', '411725', '411726', '411727', '411728', '411729', '420100', '420101', '420102', '420103', '420104', '420105', '420106', '420107', '420111', '420112', '420113', '420114', '420115', '420116', '420117', '420200', '420201', '420202', '420203', '420204', '420205', '420222', '420281', '420300', '420301', '420302', '420303', '420321', '420322', '420323', '420324', '420325', '420381', '420500', '420501', '420502', '420503', '420504', '420505', '420506', '420525', '420526', '420527', '420528', '420529', '420581', '420582', '420583', '420600', '420601', '420602', '420606', '420607', '420624', '420625', '420626', '420682', '420683', '420684', '420700', '420701', '420702', '420703', '420704', '420800', '420801', '420802', '420804', '420821', '420822', '420881', '420900', '420901', '420902', '420921', '420922', '420923', '420981', '420982', '420984', '421000', '421001', '421002', '421003', '421022', '421023', '421024', '421081', '421083', '421087', '421100', '421101', '421102', '421121', '421122', '421122', '421123', '421124', '421125', '421126', '421127', '421181', '421182', '421200', '421201', '421202', '421221', '421222', '421223', '421224', '421281', '421300', '421301', '421302', '421381', '422800', '422801', '422802', '422822', '422823', '422825', '422826', '422827', '422828', '429000', '429004', '429005', '429006', '429021', '430100', '430101', '430102', '430103', '430104', '430105', '430111', '430121', '430122', '430124', '430181', '430200', '430201', '430202', '430203', '430204', '430211', '430221', '430223', '430224', '430225', '430281', '430300', '430301', '430302', '430304', '430321', '430381', '430382', '430400', '430401', '430405', '430406', '430407', '430408', '430412', '430421', '430422', '430423', '430424', '430426', '430481', '430482', '430500', '430501', '430502', '430503', '430511', '430521', '430522', '430523', '430524', '430525', '430527', '430528', '430529', '430581', '430600', '430601', '430602', '430603', '430611', '430621', '430623', '430624', '430626', '430681', '430682', '430700', '430701', '430702', '430703', '430721', '430722', '430723', '430724', '430725', '430726', '430781', '430800', '430801', '430802', '430811', '430821', '430822', '430900', '430901', '430902', '430903', '430921', '430922', '430923', '430981', '431000', '431001', '431002', '431003', '431021', '431022', '431023', '431024', '431025', '431026', '431027', '431028', '431081', '431100', '431101', '431102', '431103', '431121', '431122', '431123', '431124', '431125', '431126', '431127', '431128', '431129', '431200', '431201', '431202', '431221', '431222', '431223', '431224', '431225', '431226', '431227', '431228', '431229', '431230', '431281', '431300', '431301', '431302', '431321', '431322', '431381', '431382', '433100', '433101', '433122', '433123', '433124', '433125', '433126', '433127', '433130', '440100', '440101']
    qu=quhao[random.randint(0,len(quhao)-1)]
    year=str(random.randint(1960,2002))
    month=['01','02','03','04','05','06','07','08','09','10','11','12']
    mon=month[random.randint(0,11)]
    if month=='02':
        if int(year)%4==0:
            day=str(random.randint(0,28))
        else:
            day=str(random.randint(0,29))
    elif month in ['01','03','05','07','08','10','12']:
        day=str(random.randint(0,31))
    else:
        day=str(random.randint(0,30))
    end=str(random.randint(0,9))+str(random.randint(0,9))
    if gender=='男':
        sex='1'
    else:
        sex='0'
    end+=sex
    final=random.randint(0,10)
    if final==10:
        final='X'
    else:
        final=str(final)
    end+=final
    if len(day)==1:
        day='0'+day
    id=qu+year+mon+day+end
    return id

def get_bumen(item):
    global 职务,部门,部门专属码
    code=职务[item]
    for i in 部门:
        if 部门[i][0]==code:
            return 部门专属码[i]


def get_techang():
    techangs=['Python','PS','PR','Speeching','Drinking','Office','Java','Web','Data processing','Machine learning','Recruiting employees','Rich working experience','PHD','Master','Communicate with officials','Speaking English','Speaking Chinese','Speaking Japanese','Negotiating','Market Analysis','Stock Market Analysis','Driving','Program Architecture Designing']
    number=random.randint(0,4)
    if number==0:
        techang='N/A'
    else:
        techang=[]
        while len(techang)<number:
            tc=techangs[random.randint(0,len(techangs)-1)]
            if tc in techang:
                continue
            else:
                techang.append(tc)
        techang=', '.join(techang)
    
    return techang+'.'

def getpic(gender):
    global picsm
    global picsw
    if gender=='Man':
        number=random.randint(1,30)
        if len(picsm)==30:
            print('男图片用完了')
        else:
            while number in picsm:
                number=random.randint(1,30)
            picsm.append(number)
        file=open("图片\\男\\男"+str(number)+'.jpg','rb')
        f=file.read()
        #f=base64.b64encode(file.read())
        if number==1: print(f)
        file.close

    else:
        number=random.randint(1,27)
        if len(picsw)==27:
            print('女图片用完了')
        else:
            while number in picsw:
                number=random.randint(1,27)
            picsw.append(number)
        file=open("图片\\女\\女"+str(number)+'.jpg','rb')
        f=file.read()
        #print(f)
        #f=base64.b64encode(file.read())
        file.close
    return f


main()